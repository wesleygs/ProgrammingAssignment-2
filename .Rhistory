q()
find.package("devtools")
install.packages("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
q
q()
q()
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
read.csv("hw1_data")
getwd()
read.csv("hw1_data")
add2 <- function(x, y){
x + y
}
add2(3, 5)
above10 <- function(x){
use <- x > 10
x[use]
}
above10 <- function(x){
use <- x > 10
x[use]
}
source('~/.active-rstudio-document')
above10(20)
above10(1:20)
above <- function(x, n){
use <- x > n
x[use]
}
above(1:20, 10)
above(1:50, 20)
f <- function(x){
y <- 2
y ^ 2 + g(x)
}
g <- function(x){
x * y
}
f(3)
y <- 10
f <- function(x){
y <- 2
y ^ 2 + g(x)
}
g <- function(x){
x * y
}
f(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
?rnorm
?runif
?elt
?function(elt)
?runif
x <- list(1:4, rnorm(10), rnorm(100, 5), rnorm(200, 10))
lapply(x, mean)
sapply
sapply(x, mean)
mean(x)
?quantile
x <- matrix(rnorm(200), 20, 10)
apply(x, quantile, probs = c(0.25, 0.75))
probs <- c(0.25, 0.75)
apply(x, quantile, probs = c(0.25, 0.75))
library(datasets)
data(mtcars)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), abs)
sapply(split(mtcars$mpg, mtcars$cyl), abs(mean()))
sapply(split(mtcars$mpg, mtcars$cyl), mean(abs))
sapply(split(mtcars$mpg, mtcars$cyl), abs)
sapply(split(mtcars$mpg, mtcars$cyl), abs$4)
mean(abs$4)
matrix <- matrix(sapply(split(mtcars$mpg, mtcars$cyl), abs)
matrix
matrix <- matrix(sapply(split(mtcars$mpg, mtcars$cyl), abs)
q
tapply(mtcars$hp, mtcars)
x <- tapply(mtcars$hp, mtcars$cyl, mean)
x['8'] - x['4']
x
str(lapply(mtcars$hp, mean))
str(sapply(mtcars$hp, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
a <- makeVector(c(1,2,3,4))
a <- makeVector(c(1,2,3,4))
getwd()
setwd("E:/Coursera-R Analysis")
a <- makeVector(c(1,2,3,4))
source("W3-assignment-example.R")
a <- makeVector(c(1,2,3,4))
a$get()
a$getmean()
cachemean(a)
cachemean(a)
source("W3-assignment-example.R")
cachemean(a)
a$set(c(10,20,30,40))> a$getmean()
a$set(c(10, 20, 30, 40))
a$getmean()
cachemean(a)
a$get()
a$setmean(a)
cachemean(a)
a <- makeVector(c(5, 25, 125, 625))
a$get()
cachemean(a)
a <- makeVector(c(5, 25, 125, 625))
a$get()
cachemean(a)
a$setmean(0)
cachemean(a)
a$set(c(10, 20, 30, 40))
a$get()
a$getmean()
cachemean(a)
a <- makeVector(c(5, 25, 125, 625))
a$get()
a$getmean()
cachemean(a)
a$set(c(1, 2, 3, 4))
a$get()
a$getmean()
cachemean(a)
source("cachematrix.R")
setwd("C:/Users/USER/ProgrammingAssignment2")
source("cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$getInverse()
amatrix$setInverse()
amatrix$setInverse(amatrix)
amatrix$getInverse()
source(“cachematrix.R”)
source(“cachematrix.R”)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getInverse()
cacheSolve(amatrix)
amatrix$getinverse()
setwd("C:/Users/USER/ProgrammingAssignment2")
source("cachematrix.R")
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$getinverse()
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$set()
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve(amar)
cacheSolve(amatrix)
